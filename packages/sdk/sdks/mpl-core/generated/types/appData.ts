/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getAuthorityDecoder,
  getAuthorityEncoder,
  getExternalPluginAdapterSchemaDecoder,
  getExternalPluginAdapterSchemaEncoder,
  type Authority,
  type AuthorityArgs,
  type ExternalPluginAdapterSchema,
  type ExternalPluginAdapterSchemaArgs,
} from '.';

export type AppData = {
  dataAuthority: Authority;
  schema: ExternalPluginAdapterSchema;
};

export type AppDataArgs = {
  dataAuthority: AuthorityArgs;
  schema: ExternalPluginAdapterSchemaArgs;
};

export function getAppDataEncoder(): Encoder<AppDataArgs> {
  return getStructEncoder([
    ['dataAuthority', getAuthorityEncoder()],
    ['schema', getExternalPluginAdapterSchemaEncoder()],
  ]);
}

export function getAppDataDecoder(): Decoder<AppData> {
  return getStructDecoder([
    ['dataAuthority', getAuthorityDecoder()],
    ['schema', getExternalPluginAdapterSchemaDecoder()],
  ]);
}

export function getAppDataCodec(): Codec<AppDataArgs, AppData> {
  return combineCodec(getAppDataEncoder(), getAppDataDecoder());
}
